name: Deployment pipeline
run-name: "${{github.event.inputs.appVersion}}"
on: 
  workflow_call: #not dispatch
   inputs: # getting user unput
     appVersion:
       required: true #sending it from genkins
       type: string
     appName:
       required: true #sending it from github
       type: string
jobs: 
  DEV: 
    # environment: DEV
    runs-on: self-hosted 
    steps: | # deployment with help of ARGOCD -using argocd cli -  then kubeconfig
      aws eks update-kubeconfig --name dev-eks 
      argocd login argocd-route-url.com --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" |base64 -d )
      argocd app create ${{github.event.inputs.appName}} --upsert --project default --sync-policy auto --repo https://github.com/manupanand-freelance-developer/project-helm --revison HEAD --path . --dest-server https://kubernetes.default.svc --dest-namespace roboshop --values env-dev/${{github.event.inputs.appName}}.yml --helm-set appVersion=${{github.event.inputs.appVersion}}

  QA: 
    environment: QA
    runs-on: self-hosted 
    needs: DEV
    steps: 
      - run : echo hello
  UAT: 
    environment: UAT
    runs-on: self-hosted 
    needs: QA
    steps: 
      - run : echo hello  
  PROD:
    environment: PROD 
    needs: UAT
    runs-on: self-hosted 
    steps: 
      - run : echo hello 

# from gh cli trigger workflow from genkins